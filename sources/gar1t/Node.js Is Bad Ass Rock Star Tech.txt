and in conclusion we have found the

pachi to be an excellent server for our

web applications any questions yes I

have a question why didn't you use node

Jas node J s is an event-driven

not blocking i/o server that can be used

to build high-performance web

applications that is an excellent

question we evaluated several

alternative web servers and concluded

that while options like nodejs are very

interesting apache meets our needs and

has a solid track record but it doesn't

have performance everybody knows that

Apache applications are slow because

they use blocking i/o and have context

switches that's a commonly held belief

that threaded web servers are somehow

less performant or scalable than event

based servers in fact if you measure

carefully you will find that both models

have similar performance characteristics

threads don't scale simple as that that

may have been true 10 years ago it's not

true today node.js will run circles

around Apache because Apache was built

before a sync was discovered this is

where I typically stab myself repeatedly

in the ears with a fork until I stop

hearing you I've looked at node it uses

a single threaded loop that dispatches

events to handlers it's a proven model

that solves some concurrency problems

but at the cost of code complexity it

gives techies like me the control to

ring every last CPU cycle out of our

servers it must feel empowering to be

totally responsible for the performance

of your application to be always on the

lookout for blocking operations that

should be split into little pieces each

perfectly tailored to optimize

concurrent throughput all the

complexities of assembler with the

efficiencies of JavaScript and the total

speed junkie do you know what this

reminds me of the invention of the

transistor it reminds me of the

invention of threads threading libraries

do exactly what you were doing manually

they break up pieces of code to be

executed intermittently switching from

instructions that are waiting on IO to

instructions that are ready to run but

your sequential code stays intact you

may recall sequin

code that's the code you can read but

it's slow as a dog your async program is

like something from a 19th century

gothic horror story drunk with your own

sense of power you reassemble pieces of

code that were once coherent stitching

them together with event loops and

callback functions until your monster

grotesque and menacing is ready to be

brought to life in a JavaScript VM you

throw the switch in the hideous creature

awakes rises and lurches forward you're

simultaneously elated and terrified that

something so unnatural could work at all

when you realize what you've unleashed

the pure morality of it your creation

reaches out with its bloodied mangled

arms and strangles you but it's fast as

hell if you're willing to suffer complex

code for performance why not write and

nginx module and C nodejs is the most

badass rockstars head to come out since

Ruby on Rails as much as I want to be an

optimist and look forward to human

progress people like you stopped me dead

in my tracks

you were fanatic in the Church of

Technology fashion I could present you

with fact after a fact after a fact that

you were thinking about asynchronous

programming is completely wrong but why

bother when you equate technology to

rock bands fancy yourself a software

hipster by wearing your node t-shirt and

celebrate horrible code maybe you are

cool hell maybe you have groupies but

when it comes to knowing what the fuck

you are talking about you have all the

facilities of a parrot that says none

blocking over and over again

non-blocking is the secret in the async

sauce with it you go fast without it you

go slow do you know when humans

discovered that the world is round 1492

Columbus sailed the ocean blue

it was 240 BC by a Greek mathematician

named Eratosthenes he conducted a simple

experiment using the length of shadows

and the distance between cities to not

only prove the earth is round but also

calculate its circumference sounds

low-tech it was utterly brilliant but

somehow for one and a half millennia it

was common

that the world was flat hundreds and

hundreds and hundreds of years of raft

ignorance howl and motherfucking hell

does this happen

it was you you who make claims about

thread performance without measuring you

who claim hacking your code with a

machete turning it inside out into a

twisted and recognizable mess will

somehow make it go faster you who spend

your time alternating between problems

that are already solved and problems

that don't actually exist you are the

reason science was set back a thousand

years the reason we have not cured

cancer the reason we have not solved

world hunger it's because of you

motherfucker that we were not on using

Liss I'm sorry what was that last part

again never mind

did you just say less you misheard me I

could have sworn you just said less if

there are no other questions this

concludes my presentation

